document.querySelectorAll('.p03-img-text-popup').forEach(item => {
    Vue.createApp({
        setup() {
            let isOpen = Vue.ref(false)

            let addBtnOpen = () => {
                isOpen.value = !isOpen.value
            }

            return {
                isOpen,
                addBtnOpen
            }
        }
    }).mount(item);
})
const secList_p01 = document.querySelectorAll(".p01-product-banner .animation-out-dom");
const windowHeight_p01 = document.documentElement.clientHeight || window.innerHeight;
const handlerScroll_banner = () => {
  secList_p01.forEach((item) => {
    if (item.getBoundingClientRect().top < windowHeight_p01 * 0.3) {
      item.classList.add("animation-dom-aitive");
    }
  });
};
window.addEventListener("scroll", handlerScroll_banner);
handlerScroll_banner();

const secList_p02 = document.querySelectorAll(".p02-sell-point .animation-out-dom");
const windowHeight_p02 = document.documentElement.clientHeight || window.innerHeight;
const handlerScroll_p02 = () => {
  secList_p02.forEach((item) => {
    if (item.getBoundingClientRect().top < windowHeight_p02 * 0.5) {
      item.classList.add("animation-dom-aitive");
    }
  });
};
window.addEventListener("scroll", handlerScroll_p02);
handlerScroll_p02();
var maodianDom = document.querySelectorAll(".anchor-point-btn");
var tableDom = document.getElementById("specs-table");
if (maodianDom && tableDom) {
  maodianDom.forEach((item) => {
    item.addEventListener("click", (e) => {
      e.preventDefault();
      var Theight = document.getElementById("specs-table").offsetTop;
      window.scrollTo({
        top: Theight - 64,
        behavior: "smooth"
      });
    });
  });
}

const secList_p03 = document.querySelectorAll(".p03-img-text-popup .animation-out-dom");
const windowHeight_p03 = document.documentElement.clientHeight || window.innerHeight;
const handlerScroll_p03 = () => {
    secList_p03.forEach((item) => {
        if (item.getBoundingClientRect().top < windowHeight_p03 * 0.3) {
            item.classList.add("animation-dom-aitive");
        }
    });
};
window.addEventListener("scroll", handlerScroll_p03);
handlerScroll_p03();
const secList_p04 = document.querySelectorAll(".p04-product-card-info .animation-out-dom");
const windowHeight_p04 = document.documentElement.clientHeight || window.innerHeight;
const handlerScroll_p04 = () => {
  secList_p04.forEach((item) => {
    if (item.getBoundingClientRect().top < windowHeight_p04 * 0.3) {
      item.classList.add("animation-dom-aitive");
    }
  });
};
window.addEventListener("scroll", handlerScroll_p04);
handlerScroll_p04();
var p04Ele = document.querySelectorAll(".p04-product-card-info");
p04Ele.forEach((item) => {
  let jq_image_video = item.querySelectorAll(".jq-content-image-video");
  item.querySelectorAll(".p04-js-hover").forEach((liEle, index) => {
    if (index > 0) {
      jq_image_video[index].style.display = 'none';
    }
    liEle.onmouseover = function () {
      for (var j = 0; j < jq_image_video.length; j++) {
        jq_image_video[j].style.display = 'none';
      }
      jq_image_video[index].style.display = 'block';
    }
  })
})


var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
axios.defaults.withCredentials = true;
const _sfc_main = {
  props: ["compare-url"],
  setup(props, ctx) {
    let animationdom = Vue.ref();
    const windowHeight_p05 = document.documentElement.clientHeight || window.innerHeight;
    window.addEventListener("scroll", () => {
      if (animationdom.value.getBoundingClientRect().top < windowHeight_p05 * 0.7) {
        animationdom.value.classList.add("animation-dom-aitive");
      }
    });
    let hideSame = Vue.ref(false);
    let productData = Vue.reactive({});
    if (props.compareUrl) {
      axios.get(props.compareUrl).then((res) => {
        if (res.status == 200) {
          let result = res.data;
          if (result.length > 1)
            ctx.emit("switch", true);
          let compareKey = [];
          result.forEach((product) => {
            compareKey = compareKey.concat(Object.keys(product));
          });
          compareKey = [...new Set(compareKey)];
          result.forEach((product) => {
            compareKey.forEach((item) => {
              if (productData[item]) {
                if (productData[item][productData[item].length - 1].text == product[item]) {
                  productData[item][productData[item].length - 1].colSpan += 1;
                } else {
                  productData[item].push({ text: product[item] || "", colSpan: 1 });
                }
              } else {
                productData[item] = [{ text: product[item] || "", colSpan: 1 }];
              }
            });
          });
        }
      }).catch((err) => {
        console.log(err);
      });
    }
    function clickHideSame() {
      hideSame.value = !hideSame.value;
    }
    return {
      clickHideSame,
      hideSame,
      productData,
      animationdom
    };
  }
};
const _hoisted_1 = {
  class: "specs-list animation-out-dom",
  ref: "animationdom"
};
const _hoisted_2 = { class: "specs-list-content" };
const _hoisted_3 = {
  class: "",
  border: "1"
};
const _hoisted_4 = ["colspan"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
    Vue.createElementVNode("div", _hoisted_2, [
      Vue.createElementVNode("table", _hoisted_3, [
        Vue.createElementVNode("tbody", null, [
          (Vue.openBlock(true), Vue.createElementBlock(Vue.Fragment, null, Vue.renderList($setup.productData, (compareList, key) => {
            return Vue.openBlock(), Vue.createElementBlock("tr", { key }, [
              Vue.createElementVNode("td", null, Vue.toDisplayString(key), 1),
              $setup.hideSame ? (Vue.openBlock(true), Vue.createElementBlock(Vue.Fragment, { key: 0 }, Vue.renderList(compareList, (compareItem, index2) => {
                return Vue.openBlock(), Vue.createElementBlock("td", {
                  key: index2,
                  colspan: compareItem.colSpan
                }, Vue.toDisplayString(compareItem.text), 9, _hoisted_4);
              }), 128)) : (Vue.openBlock(true), Vue.createElementBlock(Vue.Fragment, { key: 1 }, Vue.renderList(compareList, (compareItem) => {
                return Vue.openBlock(), Vue.createElementBlock(Vue.Fragment, null, [
                  (Vue.openBlock(true), Vue.createElementBlock(Vue.Fragment, null, Vue.renderList(compareItem.colSpan, (colSpan) => {
                    return Vue.openBlock(), Vue.createElementBlock("td", { key: colSpan }, Vue.toDisplayString(compareItem.text), 1);
                  }), 128))
                ], 64);
              }), 256))
            ]);
          }), 128))
        ])
      ])
    ])
  ], 512);
}
var producttable = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
Vue.createApp({
  components: {
    producttable
  },
  setup() {
    let compareActive = Vue.ref(false);
    let compareBg = Vue.ref(false);
    let isShowSwitch = Vue.ref(false);
    const tableRef = Vue.ref();
    let hideSmae = () => {
      tableRef.value.clickHideSame();
      compareActive.value = !compareActive.value;
      compareBg.value = !compareBg.value;
    };
    const toggleSwitch = (flag) => {
      isShowSwitch.value = flag;
    };
    return {
      isShowSwitch,
      toggleSwitch,
      hideSmae,
      tableRef,
      compareActive,
      compareBg
    };
  }
}).mount(".p05-product-compare-content");

const secList_p06 = document.querySelectorAll(".p06-product-appointment .animation-out-dom");
const windowHeight_p06 = document.documentElement.clientHeight || window.innerHeight;
const handlerScroll_p06 = () => {
  secList_p06.forEach((item) => {
    if (item.getBoundingClientRect().top < windowHeight_p06 * 0.5) {
      item.classList.add("animation-dom-aitive");
    }
  });
};
window.addEventListener("scroll", handlerScroll_p06);
handlerScroll_p06();

